@using byteCrazy.Models
@using Dapper;
@using Newtonsoft.Json;
@using System.Data.SqlClient
@{
    ViewBag.Title = "byteCrazy";
    using (SqlConnection connection = new SqlConnection("Server=1.94.181.181,1433;Database=byteCrazy;User Id=admin;Password=XQNQ0MEUL9yrtyhmlfe1866;")) {
        connection.Open();
        string productID = Request.QueryString["productID"];
        string sql = "SELECT TOP 9 * FROM [dbo].[Product] WHERE [productID] = @productID";
        sql = "select aspnetusers.username, category.title as 'category', product.* from product inner join aspnetusers on product.sellerID = aspnetusers.Id inner join category \r\n\ton product.categoryID = Category.categoryID\r\nwhere product.productID = @productID";

        IEnumerable<dynamic> results = connection.Query(sql, new { productID = productID });
        ViewBag.dataTemp = JsonConvert.SerializeObject(results);
        ViewBag.productID = Request.QueryString["productID"];
        ViewBag.showImg = results.ToList()[0].imgUrl;
    }
}
<style>
    .swiper-slide img {
        width: 100%;
        height: 100%;
    }

    .swiper {
        width: 680px;
        height: 430px;
    }

    .to-box {
        display: flex;
        justify-content: space-between;
    }

    .product-card {
        display: flex;
        flex-direction: row;
        width: 100%;
        margin-bottom: 60px;
    }

        .product-image-section {
            width: 50%;
        }
            .product-image-section img {
                width: 100%;
                height: 100%;
                object-fit: fill;
                pointer-events: none;
                user-select: none;
            }

        .product-info-section {
            width: 50%;
            margin-left: 18px;
        }
            .product-info-section > .seller-info {
                display: flex;
                flex-direction: row;
                align-items: center;

                font-size: large;
            }
                .product-info-section > .seller-info > .user-icon > i {
                    color: #8a8aa1;
                    font-size: xx-large;
                }
                .product-info-section > .seller-info > .icon-function-list {
                    margin-left: auto;
                }
                    .product-info-section > .seller-info > .icon-function-list button {
                        background-color: transparent;
                        font-size: large;
                        padding: 0px 8px !important;
                    }
                    .product-info-section > .seller-info > .icon-function-list button:hover {
                        color: #009fe9;
                    }

            .product-info-section > .product-title > .name {
                font-size: large;
            }
            .product-info-section > .product-title > .description {
                margin-top: 20px;
                max-height: 200px;
                overflow-y: auto;
            }

            .product-info-section > .product-purchase {
                padding-top: 20px;
            }

                .product-info-section > .product-purchase button:hover {
                    background-color: aliceblue;
                }


    p.detailed, textarea.detailed {
        background-color: #f9f7f7;
        padding: 20px;
        width: 100%;
    }

        p.detailed img {
            display: block;
            width: 100%;
            margin: auto;
        }

    .edit-box {
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: end;
        margin-bottom: 10px;
    }

    .edit-box button {
        background-color: #009fe9;
        border: none;
        color: white;
        border-radius: 5px;
        margin-left: 5px;
    }
    .editing .description {
        border: 1px solid #8a8aa1;
    }
    .product-image-section {
        position: relative;
    }
    .product-image-section .btn {
        position: absolute;
        width: 40px;
        height: 40px;
        right: 0;
        bottom: 0;
        margin: auto;
        border-radius: 0;
        background-color: gainsboro;
    }
    .product-image-section form, .product-image-section form input[type="file"] {
        width: 100%;
        height: 100%;
        position: absolute;
        opacity: 0;
        left: 0;
        top: 0;
    }
    #saveButton {
        display: none;
    }
    .editing #saveButton {
        display: inline-block;
    }
</style>

<div class="to-box" >
    
    <div class="product-card">
        <div class="product-image-section">
            <img src="@ViewBag.showImg">
            <button class="btn" onclick="uploadImg()" data-toggle="tooltip" data-placement="top" title="Edit Product">
                <i class="bi bi-pencil-fill"></i>
                <form action="/Home/Upload" id="uploadForm" method="post" enctype="multipart/form-data">
                    <input type="text" style="display: none;"  name="productID" value="@ViewBag.productID" >
                    <input type="file" id="UploadedImage" onchange="document.getElementById('uploadForm').submit();" name="UploadedImage" accept="image/*" required>
                </form>
            </button>
        </div>
        <div class="product-info-section">
        </div>

    </div>

</div>

<!-- Initialize Swiper -->
<script>

    function edit () {
        if (document.querySelector('.to-box').classList.contains('editing')) {
            document.querySelector('.detailed').removeAttribute('contenteditable', "")
            document.querySelector('.to-box').classList.remove('editing')
        } else {
            document.querySelector('.detailed').setAttribute('contenteditable', "")
            document.querySelector('.to-box').classList.add('editing')
        }
        
    }

    function save () {
        const formdata = new FormData();
        formdata.append("description", document.querySelector('.description').innerText);
        formdata.append("productID", "@ViewBag.productID");

        const requestOptions = {
        method: "POST",
        body: formdata,
        redirect: "follow"
        };

        fetch("http://localhost:44344/Home/EditInfo", requestOptions)
        .then((response) => response.text())
        .then((result) => {
            location.reload()
        })
        .catch((error) => console.error(error));
    }

    let dataList = JSON.parse(`@ViewBag.dataTemp`.replaceAll('&quot;', '"'))

    dataList = dataList[0]
    document.querySelector('.product-info-section').innerHTML
        = `<div class="seller-info">
                <div class="user-icon">
                    <i class="bi bi-person-circle"></i>
                </div>
                <div class="user-name">
                    ${dataList.username}
                </div>
                <div class="icon-function-list">
                    <button class="btn" onclick="edit()" data-toggle="tooltip" data-placement="top" title="Edit Product">
                        <i class="bi bi-pencil-fill"></i>
                    </button>
                    <button class="btn" data-toggle="tooltip" data-placement="top"  title="Save Product">
                        <i class="bi bi-bookmark"></i>
                    </button>
                </div>
            </div>
            <div class="product-title">
                <div class="name">
                    ${dataList.title}
                </div>
                <div class="category">
                    ${dataList.category}
                </div>
                <div class="price">
                    $${dataList.price}
                </div>
                <div class="location">
                    ${dataList.location} | 3km from you
                </div>
                <div class="description detailed">
                    ${dataList.description} Booklets are printed materials with four or more pages, containing details about a business, event, product, promotion, etc. They are also known as catalogs or pamphlets.
                    Booklets are printed materials with four or more pages, containing details about a business, event, product, promotion, etc. They are also known as catalogs or pamphlets.Booklets are printed materials with four or more pages, containing details about a business, event, product, promotion, etc. They are also known as catalogs or pamphlets.Booklets are printed materials with four or more pages, containing details about a business, event, product, promotion, etc. They are also known as catalogs or pamphlets.Booklets are printed materials with four or more pages, containing details about a business, event, product, promotion, etc. They are also known as catalogs or pamphlets.Booklets are printed materials with four or more pages, containing details about a business, event, product, promotion, etc. They are also known as catalogs or pamphlets.Booklets are printed materials with four or more pages, containing details about a business, event, product, promotion, etc. They are also known as catalogs or pamphlets.
                </div>
            </div>
            <div class="product-purchase">
                <button type="button" id="purchaseButton" class="btn btn-outline-primary">Contact Buyer for Purchase</button>
                <button type="button" id="saveButton" class="btn btn-outline-primary" onclick="save()">Save</button>
            </div>
            `
            //Purchase/Manufacture Year: ${dataList.postedDate}<br>
            //Release time: ${dataList.purchaseDate}<br>
            //Number of Followers: 16<br>
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}